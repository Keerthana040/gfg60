class Solution:
    def minDifference(self, arr: list[str]) -> int:
        # Helper to convert "HH:MM:SS" to total seconds
        def time_to_seconds(t: str) -> int:
            h, m, s = map(int, t.split(':'))
            return h * 3600 + m * 60 + s
        
        # Convert all times to seconds
        seconds = [time_to_seconds(t) for t in arr]
        
        # Sort the times in seconds
        seconds.sort()
        
        n = len(seconds)
        min_diff = 24 * 3600  # max seconds in a day
        
        # Compare consecutive time differences
        for i in range(1, n):
            diff = seconds[i] - seconds[i - 1]
            if diff < min_diff:
                min_diff = diff
        
        # Check difference between last and first with wrap around (midnight)
        wrap_diff = (seconds[0] + 24 * 3600) - seconds[-1]
        if wrap_diff < min_diff:
            min_diff = wrap_diff
        
        return min_diff

